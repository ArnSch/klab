requires "../rules.k"

module PROOF-D0IMPL_SUCK_
  imports ETHEREUM-SIMULATION
  imports EVM
  imports RULES

// suck
rule
  <k> #execute => #halt </k>
  <exit-code> 1 </exit-code>
  <mode> NORMAL </mode>
  <schedule> BYZANTIUM </schedule>
  <analysis> .Map </analysis>
  <ethereum>
    <evm>
      <output> _ </output>
      <statusCode> _ => EVMC_REVERT </statusCode>
      <callStack> VCallStack </callStack>
      <interimStates> _ </interimStates>
      <touchedAccounts> _ => _ </touchedAccounts>
      <callState>
        <program> #asMapOpCodes(#dasmOpCodes(#parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463692450098110156104d057632c80d13a811015610254576319c3777b8110156101ba5763156b595a81101561018057630c0412ea81101561011857630af9d5e08114156100d8576000543314151561008b57600080fd5b610099602435600b54610831565b60008112156100a757600080fd5b80600b556100b86004356004610783565b6100c56024358254610807565b60008112156100d357600080fd5b808255005b630bf330d681141561011757600054331415156100f457600080fd5b6000602435121561010457600080fd5b6024356101146004356008610783565b55005b5b630c0412ea81141561017f576000600435121561013457600080fd5b61013f336004610783565b61014c6004358254610831565b600081121561015a57600080fd5b80825561016b600435600954610831565b600081121561017957600080fd5b80600955005b5b63156b595a8114156101b95761019c602435600435600161079a565b546040526101b0602435600435600361079a565b54606052604080f35b5b6319c3777b8114156101dd576101d36004356004610783565b5460405260206040f35b632721908781141561025357600054331415156101f957600080fd5b6102066004356004610783565b6102136044358254610831565b600081121561022157600080fd5b8082556102316024356004610783565b91506102406044358354610807565b600081121561024e57600080fd5b808355005b5b634b62e11d8110156102ed57634914dd0b8110156102cf57632c80d13a81141561028f576102856004356005610783565b5460405260206040f35b63392404e98114156102ce57600054331415156102ab57600080fd5b600060243512156102bb57600080fd5b6024356102cb6004356006610783565b55005b5b634914dd0b8114156102ec57600a54604052600954606052604080f35b5b634b62e11d81141561031357610309602435600435600261079a565b5460405260206040f35b635a984ded8114156104cf5761032c6004356005610783565b54600c541561033a57600080fd5b600081141561034857600080fd5b61035633600435600161079a565b6103636024358254610807565b600081121561037157600080fd5b80825561038233600435600261079a565b91506103916024358354610831565b600081121561039f57600080fd5b8083556103b033600435600361079a565b92506103bf6044358454610807565b60008112156103cd57600080fd5b8084556103dd6004356007610783565b93506103ec6044358554610807565b60008112156103fa57600080fd5b808555610409604435876107be565b610414336004610783565b9550610421818754610807565b600081121561042f57600080fd5b80875561043e82600954610807565b600081121561044c57600080fd5b80600955600060243512600060443513171561048f57610479876104736004356006610783565b546107be565b610483868b6107be565b131561048e57600080fd5b5b600060443513156104cd576104a76004356008610783565b546104b2858b6107be565b13156104bd57600080fd5b600a548113156104cc57600080fd5b5b005b5b63a66d2bdf8110156105d5576383f3025381101561059957637dbf3135811015610564576369245009811415610517576000543314151561051057600080fd5b6001600c55005b637cdd3fde811415610563576000543314151561053357600080fd5b610543602435600435600261079a565b6105506044358254610807565b600081121561055e57600080fd5b808255005b5b637dbf3135811415610598576000543314151561058057600080fd5b6000600435121561059057600080fd5b600435600a55005b5b6383f302538114156105bc576105b26004356006610783565b5460405260206040f35b63923e24318114156105d457600c5460405260206040f35b5b63f34361598110156106e05763d46ea28f8110156106395763a66d2bdf81141561060557600b5460405260206040f35b63af96709b8114156106385761061e6004356008610783565b5460405261062f6004356007610783565b54606052604080f35b5b63d46ea28f8114156106df576000543314151561065557600080fd5b6000610667602435600435600161079a565b55610678602435600435600361079a565b805461069c6106948261068e6004356005610783565b546107be565b600954610831565b60008112156106aa57600080fd5b80600955600083556106bf6004356007610783565b92506106cc828454610831565b60008112156106da57600080fd5b808455005b5b63f343615981141561077e57600054331415156106fc57600080fd5b6107096004356005610783565b6107166024358254610807565b600081121561072457600080fd5b8082556107406107376004356007610783565b546024356107be565b61074c81600b54610807565b600081121561075a57600080fd5b80600b5561076a82600954610807565b600081121561077857600080fd5b80600955005b600080fd5b600081600052826020526040600020905092915050565b60008160005282602052604060002060005283602052604060002090509392505050565b600082820290508183820514831517157f800000000000000000000000000000000000000000000000000000000000000083146000851216171561080157600080fd5b92915050565b60008282019050818112156000841216828213156000851316171561082b57600080fd5b92915050565b60008282039050808212156000841216818313156000851316171561085557600080fd5b929150505600a165627a7a7230582053f8f7e4703edd5cb7f98a9afa8ae3be79d4c4be88508e82cf2e0c5cff77222c0029"), BYZANTIUM)) </program>
        <programBytes> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463692450098110156104d057632c80d13a811015610254576319c3777b8110156101ba5763156b595a81101561018057630c0412ea81101561011857630af9d5e08114156100d8576000543314151561008b57600080fd5b610099602435600b54610831565b60008112156100a757600080fd5b80600b556100b86004356004610783565b6100c56024358254610807565b60008112156100d357600080fd5b808255005b630bf330d681141561011757600054331415156100f457600080fd5b6000602435121561010457600080fd5b6024356101146004356008610783565b55005b5b630c0412ea81141561017f576000600435121561013457600080fd5b61013f336004610783565b61014c6004358254610831565b600081121561015a57600080fd5b80825561016b600435600954610831565b600081121561017957600080fd5b80600955005b5b63156b595a8114156101b95761019c602435600435600161079a565b546040526101b0602435600435600361079a565b54606052604080f35b5b6319c3777b8114156101dd576101d36004356004610783565b5460405260206040f35b632721908781141561025357600054331415156101f957600080fd5b6102066004356004610783565b6102136044358254610831565b600081121561022157600080fd5b8082556102316024356004610783565b91506102406044358354610807565b600081121561024e57600080fd5b808355005b5b634b62e11d8110156102ed57634914dd0b8110156102cf57632c80d13a81141561028f576102856004356005610783565b5460405260206040f35b63392404e98114156102ce57600054331415156102ab57600080fd5b600060243512156102bb57600080fd5b6024356102cb6004356006610783565b55005b5b634914dd0b8114156102ec57600a54604052600954606052604080f35b5b634b62e11d81141561031357610309602435600435600261079a565b5460405260206040f35b635a984ded8114156104cf5761032c6004356005610783565b54600c541561033a57600080fd5b600081141561034857600080fd5b61035633600435600161079a565b6103636024358254610807565b600081121561037157600080fd5b80825561038233600435600261079a565b91506103916024358354610831565b600081121561039f57600080fd5b8083556103b033600435600361079a565b92506103bf6044358454610807565b60008112156103cd57600080fd5b8084556103dd6004356007610783565b93506103ec6044358554610807565b60008112156103fa57600080fd5b808555610409604435876107be565b610414336004610783565b9550610421818754610807565b600081121561042f57600080fd5b80875561043e82600954610807565b600081121561044c57600080fd5b80600955600060243512600060443513171561048f57610479876104736004356006610783565b546107be565b610483868b6107be565b131561048e57600080fd5b5b600060443513156104cd576104a76004356008610783565b546104b2858b6107be565b13156104bd57600080fd5b600a548113156104cc57600080fd5b5b005b5b63a66d2bdf8110156105d5576383f3025381101561059957637dbf3135811015610564576369245009811415610517576000543314151561051057600080fd5b6001600c55005b637cdd3fde811415610563576000543314151561053357600080fd5b610543602435600435600261079a565b6105506044358254610807565b600081121561055e57600080fd5b808255005b5b637dbf3135811415610598576000543314151561058057600080fd5b6000600435121561059057600080fd5b600435600a55005b5b6383f302538114156105bc576105b26004356006610783565b5460405260206040f35b63923e24318114156105d457600c5460405260206040f35b5b63f34361598110156106e05763d46ea28f8110156106395763a66d2bdf81141561060557600b5460405260206040f35b63af96709b8114156106385761061e6004356008610783565b5460405261062f6004356007610783565b54606052604080f35b5b63d46ea28f8114156106df576000543314151561065557600080fd5b6000610667602435600435600161079a565b55610678602435600435600361079a565b805461069c6106948261068e6004356005610783565b546107be565b600954610831565b60008112156106aa57600080fd5b80600955600083556106bf6004356007610783565b92506106cc828454610831565b60008112156106da57600080fd5b808455005b5b63f343615981141561077e57600054331415156106fc57600080fd5b6107096004356005610783565b6107166024358254610807565b600081121561072457600080fd5b8082556107406107376004356007610783565b546024356107be565b61074c81600b54610807565b600081121561075a57600080fd5b80600b5561076a82600954610807565b600081121561077857600080fd5b80600955005b600080fd5b600081600052826020526040600020905092915050565b60008160005282602052604060002060005283602052604060002090509392505050565b600082820290508183820514831517157f800000000000000000000000000000000000000000000000000000000000000083146000851216171561080157600080fd5b92915050565b60008282019050818112156000841216828213156000851316171561082b57600080fd5b92915050565b60008282039050808212156000841216818313156000851316171561085557600080fd5b929150505600a165627a7a7230582053f8f7e4703edd5cb7f98a9afa8ae3be79d4c4be88508e82cf2e0c5cff77222c0029") </programBytes>
        <id> ACCT_ID </id>
        <caller> CALLER_ID </caller>
        <callData> #abiCallData("suck", #address(ABI_u), #int256(ABI_Delta_D)) </callData>
        <callValue> 0 </callValue>
        <wordStack> .WordStack => _ </wordStack>
        <localMem> .Map => _ </localMem>
        <pc> 0 => _ </pc>
        <gas> VGas => _ </gas>
        <memoryUsed> 0 => _ </memoryUsed>
        <previousGas> _ => _ </previousGas>
        <static> false </static>
        <callDepth> CALL_DEPTH => _ </callDepth>
      </callState>
      <substate>
        <selfDestruct> VSelfDestruct </selfDestruct>
        <log> VLog </log>
        <refund> VRefund </refund>
      </substate>
      <gasPrice> _ </gasPrice>
      <origin> ORIGIN_ID </origin>
      <previousHash> _ </previousHash>
      <ommersHash> _ </ommersHash>
      <coinbase> _ </coinbase>
      <stateRoot> _ </stateRoot>
      <transactionsRoot> _ </transactionsRoot>
      <receiptsRoot> _ </receiptsRoot>
      <logsBloom> _ </logsBloom>
      <difficulty> _ </difficulty>
      <number> _ </number>
      <gasLimit> _ </gasLimit>
      <gasUsed> _ </gasUsed>
      <timestamp> TIME </timestamp>
      <extraData> _ </extraData>
      <mixHash> _ </mixHash>
      <blockNonce> _ </blockNonce>
      <ommerBlockHeaders> _ </ommerBlockHeaders>
      <blockhash> _ </blockhash>
    </evm>
    <network>
      <activeAccounts> SetItem(ACCT_ID) </activeAccounts>
      <accounts>
        <account>
          <acctID> ACCT_ID </acctID>
          <balance> BAL </balance>
          <code> #parseByteStack(0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463692450098110156104d057632c80d13a811015610254576319c3777b8110156101ba5763156b595a81101561018057630c0412ea81101561011857630af9d5e08114156100d8576000543314151561008b57600080fd5b610099602435600b54610831565b60008112156100a757600080fd5b80600b556100b86004356004610783565b6100c56024358254610807565b60008112156100d357600080fd5b808255005b630bf330d681141561011757600054331415156100f457600080fd5b6000602435121561010457600080fd5b6024356101146004356008610783565b55005b5b630c0412ea81141561017f576000600435121561013457600080fd5b61013f336004610783565b61014c6004358254610831565b600081121561015a57600080fd5b80825561016b600435600954610831565b600081121561017957600080fd5b80600955005b5b63156b595a8114156101b95761019c602435600435600161079a565b546040526101b0602435600435600361079a565b54606052604080f35b5b6319c3777b8114156101dd576101d36004356004610783565b5460405260206040f35b632721908781141561025357600054331415156101f957600080fd5b6102066004356004610783565b6102136044358254610831565b600081121561022157600080fd5b8082556102316024356004610783565b91506102406044358354610807565b600081121561024e57600080fd5b808355005b5b634b62e11d8110156102ed57634914dd0b8110156102cf57632c80d13a81141561028f576102856004356005610783565b5460405260206040f35b63392404e98114156102ce57600054331415156102ab57600080fd5b600060243512156102bb57600080fd5b6024356102cb6004356006610783565b55005b5b634914dd0b8114156102ec57600a54604052600954606052604080f35b5b634b62e11d81141561031357610309602435600435600261079a565b5460405260206040f35b635a984ded8114156104cf5761032c6004356005610783565b54600c541561033a57600080fd5b600081141561034857600080fd5b61035633600435600161079a565b6103636024358254610807565b600081121561037157600080fd5b80825561038233600435600261079a565b91506103916024358354610831565b600081121561039f57600080fd5b8083556103b033600435600361079a565b92506103bf6044358454610807565b60008112156103cd57600080fd5b8084556103dd6004356007610783565b93506103ec6044358554610807565b60008112156103fa57600080fd5b808555610409604435876107be565b610414336004610783565b9550610421818754610807565b600081121561042f57600080fd5b80875561043e82600954610807565b600081121561044c57600080fd5b80600955600060243512600060443513171561048f57610479876104736004356006610783565b546107be565b610483868b6107be565b131561048e57600080fd5b5b600060443513156104cd576104a76004356008610783565b546104b2858b6107be565b13156104bd57600080fd5b600a548113156104cc57600080fd5b5b005b5b63a66d2bdf8110156105d5576383f3025381101561059957637dbf3135811015610564576369245009811415610517576000543314151561051057600080fd5b6001600c55005b637cdd3fde811415610563576000543314151561053357600080fd5b610543602435600435600261079a565b6105506044358254610807565b600081121561055e57600080fd5b808255005b5b637dbf3135811415610598576000543314151561058057600080fd5b6000600435121561059057600080fd5b600435600a55005b5b6383f302538114156105bc576105b26004356006610783565b5460405260206040f35b63923e24318114156105d457600c5460405260206040f35b5b63f34361598110156106e05763d46ea28f8110156106395763a66d2bdf81141561060557600b5460405260206040f35b63af96709b8114156106385761061e6004356008610783565b5460405261062f6004356007610783565b54606052604080f35b5b63d46ea28f8114156106df576000543314151561065557600080fd5b6000610667602435600435600161079a565b55610678602435600435600361079a565b805461069c6106948261068e6004356005610783565b546107be565b600954610831565b60008112156106aa57600080fd5b80600955600083556106bf6004356007610783565b92506106cc828454610831565b60008112156106da57600080fd5b808455005b5b63f343615981141561077e57600054331415156106fc57600080fd5b6107096004356005610783565b6107166024358254610807565b600081121561072457600080fd5b8082556107406107376004356007610783565b546024356107be565b61074c81600b54610807565b600081121561075a57600080fd5b80600b5561076a82600954610807565b600081121561077857600080fd5b80600955005b600080fd5b600081600052826020526040600020905092915050565b60008160005282602052604060002060005283602052604060002090509392505050565b600082820290508183820514831517157f800000000000000000000000000000000000000000000000000000000000000083146000851216171561080157600080fd5b92915050565b60008282019050818112156000841216828213156000851316171561082b57600080fd5b92915050565b60008282039050808212156000841216818313156000851316171561085557600080fd5b929150505600a165627a7a7230582053f8f7e4703edd5cb7f98a9afa8ae3be79d4c4be88508e82cf2e0c5cff77222c0029) </code>
          <storage> 0 |-> (Root)
                          9 |-> (#unsigned(V_p))
                          10 |-> (#unsigned(P))
                          11 |-> ((#unsigned(V) => _ )
                          12 |-> (G)
                          (#hashedLocation("DappHub", 4, V_u) |-> ((#unsigned(D_u) => _ ) </storage>
          <nonce> _ </nonce>
        </account>
      </accounts>
      <txOrder> _ </txOrder>
      <txPending> _ </txPending>
      <messages> _ </messages>
    </network>
  </ethereum>
requires 0 <=Int ACCT_ID    andBool ACCT_ID    <Int (2 ^Int 160)
andBool 0 <=Int CALLER_ID  andBool CALLER_ID  <Int (2 ^Int 160)
andBool 0 <=Int ORIGIN_ID  andBool ORIGIN_ID  <Int (2 ^Int 160)
  andBool #rangeAddress(ABI_u)
  andBool #rangeSInt(256, ABI_Delta_D)
  andBool #rangeAddress(Root)
  andBool #rangeSInt(256, V_p)
  andBool #rangeSInt(256, D_u)
  andBool #rangeSInt(256, P)
  andBool #rangeSInt(256, V)
  andBool #rangeUInt(256, VGas)
  andBool VGas >Int 300000
  andBool Root ==Int CALLER_ID
  andBool V -Int ABI_Delta_D >Int 0
  andBool D_u +Int ABI_Delta_D >Int 0
  andBool #rangeSInt(256, V -Int ABI_Delta_D)
  andBool #rangeSInt(256, D_u +Int ABI_Delta_D)
  andBool #rangeAddress(ABI_u)
  andBool #rangeSInt(256, ABI_Delta_D)
  andBool #rangeAddress(Root)
  andBool #rangeSInt(256, V_p)
  andBool #rangeSInt(256, D_u)
  andBool #rangeSInt(256, P)
  andBool #rangeSInt(256, V)
  andBool #rangeUInt(256, VGas)
  andBool notBool (
            VGas >Int 300000
    andBool Root ==Int CALLER_ID
    andBool V -Int ABI_Delta_D >Int 0
    andBool D_u +Int ABI_Delta_D >Int 0
    andBool #rangeSInt(256, V -Int ABI_Delta_D)
    andBool #rangeSInt(256, D_u +Int ABI_Delta_D)
  )

endmodule
